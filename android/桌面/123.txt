package com.company;


public class Main {
    public static void main(String[] args) {
        Node node=new Node(5);
        node.insert(7);
        node.insert(7.5);
        node.insert(8);
        node.insert(6);
        node.insert(4);
        node.insert(3);
        node.insert(5.5);
        node.delete(5);
        System.out.println(" ");
    }
}

class Node {
    private double value=0;
    private Node leftChild=null;
    private Node rightChild=null;

    public Node getRightChild(){
        return rightChild;
    }
    public Node getLeftChild(){
        return leftChild;
    }
    public Node(double value){
        this.value=value;
    }
    public void insert(double value){
        if(value>this.value){
            if (rightChild==null) rightChild=new Node(value);
            else rightChild.insert(value);
        }
        else if(value<this.value){
            if (leftChild==null) leftChild=new Node(value);
            else leftChild.insert(value);
        }
    }
    public Node getNodeByValue(double value){
        if(value==this.value)return this;
        else{
            if(value>this.value){
                if(rightChild==null)return null;
                else{
                    return rightChild.getNodeByValue(value);
                }
            }
            else {
                if(leftChild==null)return null;
                else{
                    return leftChild.getNodeByValue(value);
                }
            }
        }
    }
    public Node findMInOfChild(Node theNode){
        if(theNode.leftChild==null)return theNode;
        else {
            theNode=theNode.leftChild;
            return findMInOfChild(theNode);
        }
    }
    public void delete(double value){
        Node tmpNode=getNodeByValue(value);
        Node minNodeOfRChild=findMInOfChild(tmpNode.rightChild);
        System.out.println("");
    }

}